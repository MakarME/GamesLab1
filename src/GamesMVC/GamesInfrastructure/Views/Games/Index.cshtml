@model IEnumerable<GamesDomain.Model.Game>

@{
    ViewData["Title"] = "Games by genre";
}

<h1>Games by genre @ViewBag.GenreName</h1>

<p>
    @Html.ActionLink("Add new game", "Create", new {genreId = ViewBag.GenreId})
</p>
<p>
    @Html.ActionLink("Add existing game", "Add", new { genreId = ViewBag.GenreId })
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Developer)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Developer.Name)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" asp-route-GenreId="@ViewBag.GenreId" asp-route-GenreName="@ViewBag.GenreName">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" asp-route-GenreId="@ViewBag.GenreId" asp-route-GenreName="@ViewBag.GenreName">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" asp-route-GenreId="@ViewBag.GenreId" asp-route-GenreName="@ViewBag.GenreName">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div id="gamesChart" style="width: 900px; height: 500px;"></div>

@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            fetch('/api/Charts/getGamesReleasedPerYear')
                .then(response => response.json())
                .then(chartData => {
                    var data = new google.visualization.DataTable();
                    data.addColumn('number', 'Year');
                    data.addColumn('number', 'Games Released');

                    for (var i = 0; i < chartData.length; i++) {
                        data.addRow([chartData[i].year, chartData[i].count]);
                    }

                    var options = {
                        title: 'Games Released per Year',
                        curveType: 'none',
                        legend: { position: 'bottom' },
                        pointSize: 5,
                        pointShape: 'circle',
                        crosshair: { trigger: 'both', orientation: 'both' },
                        series: {
                            0: {
                                pointShape: 'circle',
                                pointSize: 5,
                                color: '#CC5E33'
                            }
                        }
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('gamesChart'));
                    chart.draw(data, options);
                })
                .catch(error => console.error('Error fetching data:', error));
        }
    </script>
}